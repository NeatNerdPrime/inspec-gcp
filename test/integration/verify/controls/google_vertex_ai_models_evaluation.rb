# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in README.md and
#     CONTRIBUTING.md located at the root of this package.
#
# ----------------------------------------------------------------------------

title 'Test GCP google_vertex_ai_models_evaluation resource.'

gcp_project_id = input(:gcp_project_id, value: 'gcp_project_id', description: 'The GCP project identifier.')

  models_evaluation = input('models_evaluation', value: {
  "name": "value_name",
  "region": "value_region",
  "parent": "value_parent",
  "data_item_schema_uri": "value_dataitemschemauri",
  "metrics_schema_uri": "value_metricsschemauri",
  "create_time": "value_createtime",
  "annotation_schema_uri": "value_annotationschemauri",
  "display_name": "value_displayname"
}, description: 'models_evaluation description')
control 'google_vertex_ai_models_evaluation-1.0' do
  impact 1.0
  title 'google_vertex_ai_models_evaluation resource test'

  describe google_vertex_ai_models_evaluation(name: "projects/#{gcp_project_id}/locations/#{models_evaluation['region']}/models/#{models_evaluation['model']}/evaluations/#{models_evaluation['name']}", region: models_evaluation['region']) do
  	it { should exist }
  	its('data_item_schema_uri') { should cmp models_evaluation['data_item_schema_uri'] }
  	its('metrics_schema_uri') { should cmp models_evaluation['metrics_schema_uri'] }
  	its('create_time') { should cmp models_evaluation['create_time'] }
  	its('annotation_schema_uri') { should cmp models_evaluation['annotation_schema_uri'] }
  	its('name') { should cmp models_evaluation['name'] }
  	its('display_name') { should cmp models_evaluation['display_name'] }

  end

  describe google_vertex_ai_models_evaluation(name: "does_not_exit", region: models_evaluation['region']) do
  	it { should_not exist }
  end
end
