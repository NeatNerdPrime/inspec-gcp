# frozen_string_literal: false

# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    Type: MMv1     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in README.md and
#     CONTRIBUTING.md located at the root of this package.
#
# ----------------------------------------------------------------------------
require 'gcp_backend'
require 'google/orgpolicy/property/folderconstraint_constraints'

# A provider to manage orgpolicy resources.
class OrgpolicyFolderConstraint < GcpResourceBase
  name 'google_orgpolicy_folder_constraint'
  desc 'FolderConstraint'
  supports platform: 'gcp'

  attr_reader :params
  attr_reader :next_page_token
  attr_reader :constraints

  def initialize(params)
    super(params.merge({ use_http_transport: true }))
    @params = params
    @fetched = @connection.fetch(product_url(params[:beta]), resource_base_url, params, 'Get')
    parse unless @fetched.nil?
  end

  def parse
    @next_page_token = @fetched['nextPageToken']
    @constraints = GoogleInSpec::Orgpolicy::Property::FolderConstraintConstraintsArray.parse(@fetched['constraints'], to_s)
  end

  def exists?
    !@fetched.nil?
  end

  def to_s
    "FolderConstraint #{@params[:name]}"
  end

  private

  def product_url(_ = nil)
    'https://orgpolicy.googleapis.com/v2/'
  end

  def resource_base_url
    '{{+parent}}/constraints/{{name}}'
  end
end
